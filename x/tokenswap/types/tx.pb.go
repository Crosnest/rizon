// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tokenswap/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateTokenswapRequest defines a SDK message for creating a new tokenswap
type MsgCreateTokenswapRequest struct {
	// tx_hash is the tx hash of burn tx from legacy chain
	// tx_hash is used for store key
	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty" yaml:"tx_hash"`
	// receiver is the target of tokenswap
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
	// signer is who confirms the swap process
	Signer string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty" yaml:"signer"`
	// amount is the amount of swap process
	Amount *github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,4,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"amount,omitempty"`
}

func (m *MsgCreateTokenswapRequest) Reset()         { *m = MsgCreateTokenswapRequest{} }
func (m *MsgCreateTokenswapRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTokenswapRequest) ProtoMessage()    {}
func (*MsgCreateTokenswapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93d21519151b16a6, []int{0}
}
func (m *MsgCreateTokenswapRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTokenswapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTokenswapRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTokenswapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTokenswapRequest.Merge(m, src)
}
func (m *MsgCreateTokenswapRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTokenswapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTokenswapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTokenswapRequest proto.InternalMessageInfo

func (m *MsgCreateTokenswapRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *MsgCreateTokenswapRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgCreateTokenswapRequest) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// MsgCreatetokenswapResponse defines the Msg/CreateTokenswap response type
type MsgCreateTokenswapResponse struct {
}

func (m *MsgCreateTokenswapResponse) Reset()         { *m = MsgCreateTokenswapResponse{} }
func (m *MsgCreateTokenswapResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTokenswapResponse) ProtoMessage()    {}
func (*MsgCreateTokenswapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_93d21519151b16a6, []int{1}
}
func (m *MsgCreateTokenswapResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTokenswapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTokenswapResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTokenswapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTokenswapResponse.Merge(m, src)
}
func (m *MsgCreateTokenswapResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTokenswapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTokenswapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTokenswapResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateTokenswapRequest)(nil), "rizonworld.rizon.tokenswap.MsgCreateTokenswapRequest")
	proto.RegisterType((*MsgCreateTokenswapResponse)(nil), "rizonworld.rizon.tokenswap.MsgCreateTokenswapResponse")
}

func init() { proto.RegisterFile("tokenswap/tx.proto", fileDescriptor_93d21519151b16a6) }

var fileDescriptor_93d21519151b16a6 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0xeb, 0xb7, 0xaf, 0x02, 0x58, 0x82, 0x0a, 0xc3, 0x10, 0x22, 0x94, 0xa0, 0x0c, 0x88,
	0x3f, 0xaa, 0x23, 0x81, 0x60, 0x60, 0x2c, 0x0c, 0x5d, 0xba, 0x44, 0x4c, 0x2c, 0x28, 0x4d, 0xad,
	0x24, 0x6a, 0x13, 0x07, 0x9f, 0x4b, 0x53, 0x26, 0x46, 0x46, 0x3e, 0x16, 0x63, 0x47, 0xc4, 0x10,
	0xa1, 0x76, 0x61, 0xee, 0x27, 0x40, 0x75, 0xd2, 0xaa, 0x42, 0x74, 0x60, 0xf2, 0x23, 0xdf, 0xef,
	0x39, 0xf9, 0x39, 0x1f, 0x26, 0x92, 0x77, 0x59, 0x02, 0x03, 0x2f, 0x75, 0x64, 0x46, 0x53, 0xc1,
	0x25, 0x27, 0x86, 0x88, 0x9e, 0x78, 0x32, 0xe0, 0xa2, 0xd7, 0xa1, 0x4a, 0xd2, 0x05, 0x64, 0xec,
	0x06, 0x3c, 0xe0, 0x0a, 0x73, 0x66, 0xaa, 0x70, 0xd8, 0x5f, 0x08, 0xef, 0xb5, 0x20, 0xb8, 0x16,
	0xcc, 0x93, 0xec, 0x76, 0x0e, 0xbb, 0xec, 0xa1, 0xcf, 0x40, 0x92, 0x53, 0xbc, 0x26, 0xb3, 0xfb,
	0xd0, 0x83, 0x50, 0x47, 0x07, 0xe8, 0x68, 0xa3, 0x41, 0xa6, 0xb9, 0xb5, 0x35, 0xf4, 0xe2, 0xde,
	0x95, 0x5d, 0x16, 0x6c, 0x57, 0x93, 0x59, 0xd3, 0x83, 0x90, 0x38, 0x78, 0x5d, 0x30, 0x9f, 0x45,
	0x8f, 0x4c, 0xe8, 0xff, 0x14, 0xbd, 0x33, 0xcd, 0xad, 0x5a, 0x41, 0xcf, 0x2b, 0xb6, 0xbb, 0x80,
	0xc8, 0x31, 0xd6, 0x20, 0x0a, 0x12, 0x26, 0xf4, 0xaa, 0xc2, 0xb7, 0xa7, 0xb9, 0xb5, 0x59, 0xe0,
	0xc5, 0xbd, 0xed, 0x96, 0x00, 0x69, 0x60, 0xcd, 0x8b, 0x79, 0x3f, 0x91, 0xfa, 0x7f, 0x85, 0x9e,
	0x7c, 0xe4, 0xd6, 0x61, 0x10, 0xc9, 0xb0, 0xdf, 0xa6, 0x3e, 0x8f, 0x1d, 0x9f, 0x43, 0xcc, 0xa1,
	0x3c, 0xea, 0xd0, 0xe9, 0x3a, 0x72, 0x98, 0x32, 0xa0, 0x37, 0xcc, 0x77, 0x4b, 0xa7, 0xbd, 0x8f,
	0x8d, 0xdf, 0x92, 0x42, 0xca, 0x13, 0x60, 0x67, 0x2f, 0x08, 0x57, 0x5b, 0x10, 0x90, 0x67, 0x84,
	0x6b, 0x3f, 0x18, 0x72, 0x41, 0x57, 0xcf, 0x95, 0xae, 0x9c, 0x9e, 0x71, 0xf9, 0x57, 0x5b, 0xf1,
	0x94, 0x46, 0xf3, 0x6d, 0x6c, 0xa2, 0xd1, 0xd8, 0x44, 0x9f, 0x63, 0x13, 0xbd, 0x4e, 0xcc, 0xca,
	0x68, 0x62, 0x56, 0xde, 0x27, 0x66, 0xe5, 0x8e, 0x2e, 0x45, 0x56, 0x0d, 0xeb, 0xaa, 0x79, 0xa1,
	0x9d, 0xcc, 0x59, 0x5a, 0x89, 0x59, 0xfc, 0xb6, 0xa6, 0x3e, 0xf9, 0xfc, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x76, 0x10, 0x0e, 0x65, 0x2c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateTokenswap defines a method for creating a new tokenswap
	CreateTokenswap(ctx context.Context, in *MsgCreateTokenswapRequest, opts ...grpc.CallOption) (*MsgCreateTokenswapResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateTokenswap(ctx context.Context, in *MsgCreateTokenswapRequest, opts ...grpc.CallOption) (*MsgCreateTokenswapResponse, error) {
	out := new(MsgCreateTokenswapResponse)
	err := c.cc.Invoke(ctx, "/rizonworld.rizon.tokenswap.Msg/CreateTokenswap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateTokenswap defines a method for creating a new tokenswap
	CreateTokenswap(context.Context, *MsgCreateTokenswapRequest) (*MsgCreateTokenswapResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateTokenswap(ctx context.Context, req *MsgCreateTokenswapRequest) (*MsgCreateTokenswapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTokenswap not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateTokenswap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTokenswapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTokenswap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rizonworld.rizon.tokenswap.Msg/CreateTokenswap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTokenswap(ctx, req.(*MsgCreateTokenswapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rizonworld.rizon.tokenswap.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTokenswap",
			Handler:    _Msg_CreateTokenswap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tokenswap/tx.proto",
}

func (m *MsgCreateTokenswapRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTokenswapRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTokenswapRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Amount != nil {
		{
			size := m.Amount.Size()
			i -= size
			if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TxHash) > 0 {
		i -= len(m.TxHash)
		copy(dAtA[i:], m.TxHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TxHash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTokenswapResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTokenswapResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTokenswapResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateTokenswapRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TxHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Amount != nil {
		l = m.Amount.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTokenswapResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateTokenswapRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTokenswapRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTokenswapRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TxHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_cosmos_cosmos_sdk_types.Dec
			m.Amount = &v
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTokenswapResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTokenswapResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTokenswapResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
